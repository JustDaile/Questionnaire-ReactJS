{"version":3,"sources":["reportWebVitals.js","store/local-store.js","components/local-store-selector/local-store-selector.js","constants/option-types.js","components/question-renderer/question-renderer.js","components/questionnaire-renderer/questionnaire-renderer.js","components/question-designer/question-designer.js","components/questionnaire-designer/questionnaire-designer.js","helpers/shuffler.js","components/question/question.js","components/questionnaire/questionnaire.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getQuestionnaireIds","JSON","parse","localStorage","getItem","getQuestionnaire","id","undefined","saveQuestionnaire","questionnaire","setItem","stringify","cache","includes","push","deleteQuestionnaire","filter","i","removeItem","LocalStoreSelector","props","questionnaires","state","onChange","defaultItem","length","a","select","document","querySelector","selectedIndex","selectedValue","options","value","this","questionaires","console","log","Col","sm","md","lg","className","FloatingLabel","controlId","label","Form","Select","size","updateSelection","map","loaded","title","React","Component","OptionTypes","MULT_CHOICE_CHECK","SINGLE_CHOICE_RADIO","SINGLE_CHOICE_SELECT","getHTMLInputTypeForQuestionType","questionType","inputType","MATHMATICAL_INPUT","GRAMMATICAL_INPUT","Error","Object","keys","QuestionRenderer","details","renderOptions","type","Group","as","Row","xs","index","renderSelect","option","o","renderInputOption","text","getSelectId","getSelectClassName","renderDefaultSelectOption","renderSelectOption","name","Check","renderInput","correct","style","Card","Header","renderHeader","Text","renderDetails","Footer","renderOptionsContainer","QuestionnaireRenderer","questions","getTitle","getQuestions","question","questionIndex","xl","renderQuestion","Container","fluid","renderTitle","renderQuestions","QuestionDesigner","onChanged","onDelete","onTitleChange","bind","onMarksChange","onOptionChange","onOptionSelect","onSelectCorrectOption","onDetailsChange","onOptionTypeChange","fromElemById","itsProperty","toProperty","updateValue","mutated","assign","target","placeholder","e","marks","forEach","optionIndex","input","checked","selected","parseInt","popover","Popover","Body","Button","variant","onClick","body","click","Control","autoComplete","OverlayTrigger","trigger","placement","overlay","rootClose","CloseButton","height","markInputId","selectorId","jsx","_","InputGroup","min","max","addOption","deleteOption","getCorrectOptionIndexes","QuestionnaireDesigner","titlePlaceholder","addQuestion","qstate","onQuestionChange","deleteQuestion","shuffle","j","Math","floor","random","temp","Question","Shuffler","onMarked","getOption","isValid","disabled","isInvalid","isChecked","isCorrect","elem","show","checkSelectValid","calculateMarks","checkInputValid","QuestionnaireInteractive","showResultModal","marked","Array","fill","onComplete","onQuestionMarked","setState","Modal","centered","closeButton","Title","reduce","c","q","offset","span","renderModal","ExampleQuestionnaire","PageStates","Main","pageState","onQuestionnaireChange","onSelectedChange","new","download","toggleComplete","delete","addExample","cuid","mutation","itemSeleted","link","setAttribute","encodeURIComponent","replaceAll","alert","v","Navbar","expand","bg","Brand","Toggle","Collapse","Nav","Link","href","renderPageState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0e2ca8b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function getQuestionnaireIds() {\r\n  return JSON.parse(localStorage.getItem(\"questionnaires\")) || [];\r\n}\r\n\r\n// get questionnaire from local storage by it's ID.\r\nexport function getQuestionnaire(id) {\r\n  return JSON.parse(localStorage.getItem(id)) || undefined; // don't return null, return undefined instead.\r\n}\r\n\r\nexport function saveQuestionnaire(id, questionnaire) {\r\n  localStorage.setItem(id, JSON.stringify(questionnaire));\r\n  let cache = getQuestionnaireIds();\r\n  if (!cache.includes(id)) {\r\n    cache.push(id);\r\n    localStorage.setItem(\"questionnaires\", JSON.stringify(cache));\r\n  }\r\n}\r\n\r\nexport function deleteQuestionnaire(id) {\r\n  if (id === \"none\") {\r\n    return;\r\n  }\r\n  let cache = getQuestionnaireIds();\r\n\r\n  if (cache.includes(id)) {\r\n    cache = cache.filter((i) => i !== id);\r\n    localStorage.setItem(\"questionnaires\", JSON.stringify(cache));\r\n  }\r\n  localStorage.removeItem(id);\r\n}\r\n","import React from \"react\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {\r\n  getQuestionnaireIds,\r\n  getQuestionnaire,\r\n  saveQuestionnaire,\r\n} from \"../../store/local-store\";\r\nimport \"./local-store-selector.css\";\r\nimport cuid from \"cuid\";\r\n\r\nclass LocalStoreSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let questionnaires = getQuestionnaireIds();\r\n    this.state = {\r\n      onChange: props.onChange ? props.onChange : () => {},\r\n      defaultItem: questionnaires.length > 0 ? questionnaires[0] : \"none\",\r\n    };\r\n    if (!this.props.id) {\r\n      this.state.onChange(this.state.defaultItem, 0);\r\n    }\r\n  }\r\n  async updateSelection() {\r\n    const select = document.querySelector(\"#questionnaire_select\");\r\n    const selectedIndex = select.selectedIndex;\r\n    const selectedValue = select.options[selectedIndex].value;\r\n    await this.state.onChange(selectedValue, selectedIndex);\r\n  }\r\n  render() {\r\n    const questionaires = getQuestionnaireIds();\r\n    console.log(`render selector with selected: ${this.props.id}`);\r\n\r\n    return (\r\n      <Col sm=\"12\" md=\"5\" lg=\"3\" className=\"m-2 pl-4\">\r\n        <FloatingLabel controlId=\"floatingSelectGrid\" label=\"Questionnaire\">\r\n          <Form.Select\r\n            size=\"sm\"\r\n            aria-label=\"Questionnaire selector\"\r\n            id={\"questionnaire_select\"}\r\n            onChange={() => {\r\n              this.updateSelection();\r\n            }}\r\n            value={this.props.id}\r\n          >\r\n            {questionaires.map((id, i) => {\r\n              const loaded = getQuestionnaire(id);\r\n              if (!loaded) {\r\n                return <option>Deleted {id}</option>;\r\n              }\r\n              return (\r\n                <option key={i} value={id}>\r\n                  {loaded.title ? loaded.title : \"untitled questionnaire\"}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Select>\r\n        </FloatingLabel>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocalStoreSelector;\r\n","const OptionTypes = {\r\n  MULT_CHOICE_CHECK: \"multiple-choice-check\",\r\n  SINGLE_CHOICE_RADIO: \"single-choice\",\r\n  SINGLE_CHOICE_SELECT: \"single-choice-select\",\r\n  // MATHMATICAL_INPUT: \"mathematical\",\r\n  // GRAMMATICAL_INPUT: \"grammatical\",\r\n};\r\n\r\nexport default OptionTypes;\r\nexport function getHTMLInputTypeForQuestionType(questionType) {\r\n  const inputType =\r\n    questionType === OptionTypes.MULT_CHOICE_CHECK\r\n      ? \"checkbox\"\r\n      : questionType === OptionTypes.SINGLE_CHOICE_RADIO\r\n      ? \"radio\"\r\n      : questionType === OptionTypes.SINGLE_CHOICE_SELECT\r\n      ? \"select\"\r\n      : questionType === OptionTypes.MATHMATICAL_INPUT\r\n      ? \"number\"\r\n      : questionType === OptionTypes.GRAMMATICAL_INPUT\r\n      ? \"text\"\r\n      : \"error\";\r\n  if (inputType === \"error\") {\r\n    throw new Error(\r\n      `unknown question type '${questionType}' expected one of ${JSON.stringify(\r\n        Object.keys(OptionTypes)\r\n      )}`\r\n    );\r\n  }\r\n  return inputType;\r\n}\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { getHTMLInputTypeForQuestionType } from \"../../constants/option-types\";\r\n// import { ReactComponent as Tick } from \"../../../assets/tick.svg\";\r\n// import { ReactComponent as Cross } from \"../../../assets/cross.svg\";\r\nimport \"./question-renderer.css\";\r\n\r\n// Question - Only responsible for rendering\r\n// Should be extended and override methods to deal with anything else.\r\nclass QuestionRenderer extends React.Component {\r\n  // Render title\r\n  renderHeader() {\r\n    return <h3>{this.props.title}</h3>;\r\n  }\r\n  // Render details\r\n  renderDetails() {\r\n    return this.props.details;\r\n  }\r\n  // Render the container, that contains the rendered options.\r\n  // If overrided you'll have to call super.renderOptions or render options yourself.\r\n  renderOptionsContainer() {\r\n    return <Form className={\"question-options\"}>{this.renderOptions()}</Form>;\r\n  }\r\n  // Render a question.\r\n  renderOptions() {\r\n    const inputType = getHTMLInputTypeForQuestionType(this.props.type);\r\n\r\n    if (inputType === \"select\") {\r\n      return (\r\n        <Form.Group\r\n          as={Row}\r\n          xs=\"auto\"\r\n          className={\"question-option\"}\r\n          data-q-index={this.props.index}\r\n        >\r\n          {this.renderSelect(\"choose an option: \")}\r\n        </Form.Group>\r\n      );\r\n    }\r\n\r\n    return (this.props.options || []).map((option, o) => {\r\n      return this.renderInputOption(inputType, o);\r\n    });\r\n  }\r\n  renderDefaultSelectOption() {\r\n    return <option value=\"none\">select an option...</option>;\r\n  }\r\n  // Render an option to the current select element.\r\n  renderSelectOption(index) {\r\n    return (\r\n      <option value={index} key={`select_option_${index}`}>\r\n        {this.props.options[index].text}\r\n      </option>\r\n    );\r\n  }\r\n  getSelectId() {\r\n    return `option_select_${this.props.index}`;\r\n  }\r\n  getSelectClassName() {\r\n    return \"option-select\";\r\n  }\r\n\r\n  // Render a select element for the current question.\r\n  renderSelect() {\r\n    return (\r\n      <Form.Select\r\n        aria-label={\"option\"}\r\n        id={this.getSelectId()}\r\n        className={this.getSelectClassName()}\r\n      >\r\n        {this.renderDefaultSelectOption()}\r\n        {this.props.options.map((o, index) => {\r\n          return this.renderSelectOption(index);\r\n        })}\r\n      </Form.Select>\r\n    );\r\n  }\r\n  // Render a input element.\r\n  renderInput(type, name, value, label, index) {\r\n    return (\r\n      <Col sm=\"10\">\r\n        <Form.Check\r\n          label={label}\r\n          type={type}\r\n          name={name}\r\n          value={value}\r\n          data-o-index={index}\r\n          className={`option`}\r\n        />\r\n      </Col>\r\n    );\r\n  }\r\n  // Render an option type input element.\r\n  renderInputOption(type, index) {\r\n    if (!this.props.options[index]) {\r\n      return;\r\n    }\r\n    return (\r\n      <Form.Group\r\n        className=\"my-1\"\r\n        as={Row}\r\n        data-q-index={this.props.index}\r\n        id={`option_inputs_${index}`}\r\n        key={`option_inputs_${index}`}\r\n      >\r\n        {this.renderInput(\r\n          type,\r\n          type === \"radio\" ? this.props.index : `option_${index}`,\r\n          this.props.options[index].correct,\r\n          this.props.options[index].text,\r\n          index\r\n        )}\r\n      </Form.Group>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Col\r\n        style={{ \"--index\": this.props.index }}\r\n        key={`question_${this.props.index}`}\r\n      >\r\n        <Card className={\"question-card mb-3\"}>\r\n          <Card.Header>{this.renderHeader()}</Card.Header>\r\n          <Card.Text className={\"question-details p-3 mb-0\"} as=\"div\">\r\n            {this.renderDetails()}\r\n          </Card.Text>\r\n          <Card.Footer>{this.renderOptionsContainer()}</Card.Footer>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionRenderer;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport QuestionRenderer from \"../question-renderer/question-renderer\";\r\nimport \"./questionnaire-renderer.css\";\r\n\r\n// QuestionnaireRenderer - Only responsible for rendering\r\n// Should be extended and override methods to deal with anything else.\r\nclass QuestionnaireRenderer extends React.Component {\r\n  getTitle() {\r\n    return this.props.questionnaire.title;\r\n  }\r\n  getQuestions() {\r\n    return this.props.questionnaire.questions || [];\r\n  }\r\n  renderTitle() {\r\n    return <h1>{this.getTitle()}</h1>;\r\n  }\r\n  renderQuestions() {\r\n    return this.getQuestions().map((question, questionIndex) => {\r\n      return (\r\n        <Col\r\n          xl=\"4\"\r\n          lg=\"6\"\r\n          sm=\"12\"\r\n          key={`question_column_${questionIndex}`}\r\n          className={\"question\"}\r\n          id={`question_${questionIndex}`}\r\n        >\r\n          {this.renderQuestion(question, questionIndex)}\r\n        </Col>\r\n      );\r\n    });\r\n  }\r\n  renderQuestion(question, index) {\r\n    return (\r\n      <QuestionRenderer key={`question_${index}`} index={index} {...question} />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Container fluid className={\"questionnaire\"}>\r\n        <Row className={\"header\"}>\r\n          <Col className={\"text-center\"}>{this.renderTitle()}</Col>\r\n        </Row>\r\n        <Row>{this.renderQuestions()}</Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionnaireRenderer;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CloseButton from \"react-bootstrap/CloseButton\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport QuestionRenderer from \"../question-renderer/question-renderer\";\r\nimport OptionTypes from \"../../constants/option-types\";\r\nimport { getHTMLInputTypeForQuestionType } from \"../../constants/option-types\";\r\nimport \"./question-designer.css\";\r\n\r\nclass QuestionDesigner extends QuestionRenderer {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChanged: props.onChanged ? props.onChanged : () => {},\r\n      onDelete: props.onDelete ? props.onDelete : () => {},\r\n    };\r\n    this.onTitleChange = this.onTitleChange.bind(this);\r\n    this.onMarksChange = this.onMarksChange.bind(this);\r\n    this.onOptionChange = this.onOptionChange.bind(this);\r\n    this.onOptionSelect = this.onOptionSelect.bind(this);\r\n    this.onSelectCorrectOption = this.onSelectCorrectOption.bind(this);\r\n    this.onDetailsChange = this.onDetailsChange.bind(this);\r\n    this.onOptionTypeChange = this.onOptionTypeChange.bind(this);\r\n  }\r\n  async update(fromElemById, itsProperty, toProperty, option = -1) {\r\n    const updateValue = document.querySelector(`#${fromElemById}`)[itsProperty];\r\n    console.log(\r\n      `update option ${option}.${toProperty} from ${fromElemById} ${itsProperty} === ${updateValue}`\r\n    );\r\n\r\n    let mutated = Object.assign({}, this.props);\r\n    if (option >= 0) {\r\n      mutated.options[option][toProperty] = updateValue;\r\n    } else {\r\n      mutated[toProperty] = updateValue;\r\n    }\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  populateInputWithValue(id) {\r\n    const target = document.querySelector(`#${id}`);\r\n    target.value = target.placeholder;\r\n  }\r\n  async addOption() {\r\n    let mutated = Object.assign({}, this.props);\r\n    if (!mutated.options) {\r\n      mutated.options = [];\r\n    }\r\n    mutated.options.push({\r\n      text: null,\r\n      correct: false,\r\n    });\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  async deleteOption(index) {\r\n    let mutated = Object.assign({}, this.props);\r\n    delete mutated.options[index];\r\n    mutated.options = mutated.options.filter((o) => o !== null);\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  getCorrectOptionIndexes() {\r\n    return (this.props.options || [])\r\n      .map((o, i) => (o.correct ? i : false))\r\n      .filter((i) => i !== false);\r\n  }\r\n  async onTitleChange(e) {\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.title = e.target.value;\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  async onMarksChange(e) {\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.marks = e.target.value;\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  async onOptionChange(e, index) {\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.options[index].text = e.target.value;\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  async onDetailsChange(e) {\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.details = e.target.value;\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  async onOptionSelect() {\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.options.forEach((option, optionIndex) => {\r\n      const input = document.querySelector(\r\n        `#question_${mutated.index}_option_${optionIndex}`\r\n      );\r\n      option.correct = false;\r\n      if (input.checked) {\r\n        option.correct = true;\r\n      }\r\n    });\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  async onSelectCorrectOption() {\r\n    const options = document.querySelector(\r\n      `#option_select_${this.props.index}`\r\n    );\r\n    const selected = options.options[options.selectedIndex].value;\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.options.forEach((option, index) => {\r\n      option.correct = false;\r\n      if (index === parseInt(selected)) {\r\n        option.correct = true;\r\n      }\r\n    });\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  async updateCorrectInputOptions() {\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.options.forEach((option, optionIndex) => {\r\n      const input = document.querySelector(\r\n        `#question_${mutated.index}_option_${optionIndex}`\r\n      );\r\n      option.correct = false;\r\n      if (input.checked) {\r\n        option.correct = true;\r\n      }\r\n    });\r\n\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  async onOptionTypeChange(e) {\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.type = e.target.value;\r\n    await this.state.onChanged(mutated);\r\n  }\r\n  renderHeader() {\r\n    const id = `question_${this.props.index}_header`;\r\n    const placeholder = \"question title\";\r\n    const popover = (\r\n      <Popover id={`${id}_popover`}>\r\n        <Popover.Header as=\"h3\">Delete this question?</Popover.Header>\r\n        <Popover.Body>\r\n          <Button\r\n            variant=\"danger\"\r\n            className={\"m-1\"}\r\n            onClick={async () => {\r\n              await this.props.onDelete(this.props.index);\r\n            }}\r\n          >\r\n            Accept\r\n          </Button>\r\n          <Button className={\"m-1\"} onClick={() => document.body.click()}>\r\n            Cancel\r\n          </Button>\r\n        </Popover.Body>\r\n      </Popover>\r\n    );\r\n\r\n    return (\r\n      <Form.Group as={Row}>\r\n        <Col md=\"11\">\r\n          <FloatingLabel label=\"Question Title\">\r\n            <Form.Control\r\n              className={\"questionTitle\"}\r\n              id={id}\r\n              type=\"text\"\r\n              placeholder={placeholder}\r\n              onChange={this.onTitleChange}\r\n              value={this.props.title ? this.props.title : \"\"}\r\n              autoComplete={\"off\"}\r\n            />\r\n          </FloatingLabel>\r\n        </Col>\r\n        <Col className={\"align-self-center p-0\"}>\r\n          <OverlayTrigger\r\n            trigger=\"click\"\r\n            placement=\"left\"\r\n            overlay={popover}\r\n            rootClose={true}\r\n          >\r\n            <CloseButton />\r\n          </OverlayTrigger>\r\n        </Col>\r\n      </Form.Group>\r\n    );\r\n  }\r\n  renderDetails() {\r\n    const id = `question_${this.props.index}_details`;\r\n    const placeholder = \"question details here..\";\r\n    return (\r\n      <FloatingLabel label=\"Question Details\">\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          id={id}\r\n          className={\"question-details\"}\r\n          style={{ height: \"100px\" }}\r\n          onChange={this.onDetailsChange}\r\n          placeholder={placeholder}\r\n          value={this.props.details ? this.props.details : \"\"}\r\n        ></Form.Control>\r\n      </FloatingLabel>\r\n    );\r\n  }\r\n  renderOptions() {\r\n    console.log(`rendering options of type ${this.props.type}`);\r\n    const inputType = getHTMLInputTypeForQuestionType(this.props.type);\r\n    const markInputId = `question_${this.props.index}_marks`;\r\n    const selectorId = `question_${this.props.index}_type_selector`;\r\n    console.log(`rendering options ${inputType}`);\r\n\r\n    const jsx =\r\n      inputType === \"select\" ? (\r\n        <div className={\"option\"} data-q-index={this.props.index}>\r\n          {this.renderSelect()}\r\n        </div>\r\n      ) : (\r\n        (this.props.options || []).map((_, o) => {\r\n          console.log(\r\n            `rendering input option ${o} type ${inputType} for question ${this.props.index}`\r\n          );\r\n          return this.renderInputOption(inputType, o);\r\n        })\r\n      );\r\n\r\n    return (\r\n      <>\r\n        <Form.Group id={\"optionTypeSelector\"} as={Row} className=\"mb-4\">\r\n          <Col md=\"12\">\r\n            <FloatingLabel label=\"Option Type\">\r\n              <Form.Select\r\n                aria-label=\"Questionnaire type selector\"\r\n                size=\"sm\"\r\n                id={selectorId}\r\n                value={this.props.type}\r\n                onChange={this.onOptionTypeChange}\r\n              >\r\n                {Object.keys(OptionTypes).map((option, o) => {\r\n                  return (\r\n                    <option\r\n                      key={`${selectorId}_option_${o}`}\r\n                      value={OptionTypes[option]}\r\n                    >\r\n                      {option}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Select>\r\n            </FloatingLabel>\r\n          </Col>\r\n        </Form.Group>\r\n        {jsx}\r\n        <Form.Group as={Row} className=\"mb-2 mt-4 justify-content-between\">\r\n          <Col sm=\"12\" md=\"6\">\r\n            <InputGroup>\r\n              <InputGroup.Text>Marks</InputGroup.Text>\r\n              <Form.Control\r\n                className={\"marks\"}\r\n                id={markInputId}\r\n                type={\"number\"}\r\n                placeholder={\"total marks\"}\r\n                min={1}\r\n                max={100}\r\n                name={\"marks\"}\r\n                autoComplete={\"off\"}\r\n                onChange={this.onMarksChange}\r\n                value={this.props.marks ? this.props.marks : \"\"}\r\n              ></Form.Control>\r\n            </InputGroup>\r\n          </Col>\r\n          <Col sm=\"12\" md=\"5\">\r\n            <Button\r\n              className=\"w-100\"\r\n              onClick={async () => await this.addOption()}\r\n            >\r\n              Add Option\r\n            </Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </>\r\n    );\r\n  }\r\n  // Render questionnaires inputs.\r\n  // Typically these are either radio or checkbox.\r\n  renderInput(type, name, value, label, index) {\r\n    const id = `question_${this.props.index}_option_${index}`;\r\n    const placeholder = \"option..\";\r\n\r\n    const popover = (\r\n      <Popover id={`${id}_popover`}>\r\n        <Popover.Header as=\"h3\">Delete this option?</Popover.Header>\r\n        <Popover.Body>\r\n          <Button\r\n            className={\"m-1\"}\r\n            onClick={async () => {\r\n              await this.deleteOption(index);\r\n            }}\r\n          >\r\n            Accept\r\n          </Button>\r\n          <Button className={\"m-1\"} onClick={() => document.body.click()}>\r\n            Cancel\r\n          </Button>\r\n        </Popover.Body>\r\n      </Popover>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Col>\r\n          <InputGroup>\r\n            <InputGroup.Text>\r\n              <OverlayTrigger\r\n                trigger=\"click\"\r\n                placement=\"right\"\r\n                overlay={popover}\r\n                rootClose={true}\r\n              >\r\n                <CloseButton />\r\n              </OverlayTrigger>\r\n            </InputGroup.Text>\r\n            <Form.Control\r\n              className={\"option_text\"}\r\n              type=\"text\"\r\n              placeholder={placeholder}\r\n              onChange={(e) => {\r\n                this.onOptionChange(e, index);\r\n              }}\r\n              autoComplete={\"off\"}\r\n              value={\r\n                this.props.options[index].text\r\n                  ? this.props.options[index].text\r\n                  : \"\"\r\n              }\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col sm=\"4\" className={\"align-self-center\"}>\r\n          <Form.Check\r\n            label={value === true ? \"correct\" : \"incorrect\"}\r\n            id={id}\r\n            onChange={this.onOptionSelect}\r\n            type={type}\r\n            name={name}\r\n            checked={value === true}\r\n            data-o-index={this.props.index}\r\n          />\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n  renderSelect() {\r\n    return (\r\n      <Form.Select\r\n        id={this.getSelectId()}\r\n        onChange={this.onSelectCorrectOption}\r\n        value={this.getCorrectOptionIndexes()[0]}\r\n      >\r\n        {super.renderDefaultSelectOption()}\r\n        {(this.props.options || []).map((_, optionIndex) => {\r\n          return super.renderSelectOption(optionIndex);\r\n        })}\r\n      </Form.Select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionDesigner;\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport QuestionnaireRenderer from \"../questionnaire-renderer/questionnaire-renderer\";\r\nimport QuestionDesigner from \"../question-designer/question-designer\";\r\nimport OptionTypes from \"../../constants/option-types\";\r\nimport \"./questionnaire-designer.css\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\n// Designer to design questionnaires.\r\n//\r\n// Properties:\r\n//   - questionnaire     object\r\n//     - title:          string\r\n//     - questions:      array\r\n//       - title         string\r\n//       - details       string\r\n//       - options       array\r\n//         - text        string\r\n//         - correct     bool\r\n//       - marks         integer\r\n//\r\n// Optional properties:\r\n//   - titlePlaceholder  string\r\n//\r\nclass QuestionnaireDesigner extends QuestionnaireRenderer {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChange: props.onChange ? props.onChange : () => {},\r\n    };\r\n    this.onTitleChange = this.onTitleChange.bind(this);\r\n  }\r\n  async onTitleChange(e) {\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.questionnaire.title = e.target.value;\r\n    await this.state.onChange(mutated);\r\n  }\r\n  async onQuestionChange({ index, title, details, options, type, marks }) {\r\n    let mutated = Object.assign({}, this.props);\r\n    console.log({ index, title, details, options, type, marks });\r\n    mutated.questionnaire.questions[index] = {\r\n      title: title,\r\n      details: details,\r\n      options: options,\r\n      type: type,\r\n      marks: marks,\r\n    };\r\n    await this.state.onChange(mutated);\r\n  }\r\n  async addQuestion() {\r\n    let mutated = Object.assign({}, this.props);\r\n    if (!mutated.questionnaire.questions) {\r\n      mutated.questionnaire.questions = [];\r\n    }\r\n    mutated.questionnaire.questions.push({\r\n      type: OptionTypes.SINGLE_CHOICE_RADIO,\r\n      marks: 5,\r\n    });\r\n    await this.state.onChange(mutated);\r\n  }\r\n  async deleteQuestion(index) {\r\n    let mutated = Object.assign({}, this.props);\r\n    mutated.questionnaire.questions = mutated.questionnaire.questions.filter(\r\n      (_, i) => i !== index\r\n    );\r\n    await this.state.onChange(mutated);\r\n  }\r\n  renderTitle() {\r\n    const placeholder = this.props.titlePlaceholder\r\n      ? this.props.titlePlaceholder\r\n      : \"Enter a title\";\r\n    return (\r\n      <FloatingLabel label=\"Questionnaire Title\">\r\n        <Form.Control\r\n          id={\"title-input\"}\r\n          className={\"editable-text text-center my-5\"}\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          onChange={this.onTitleChange}\r\n          autoComplete={\"off\"}\r\n          value={\r\n            this.props.questionnaire.title ? this.props.questionnaire.title : \"\"\r\n          }\r\n        />\r\n      </FloatingLabel>\r\n    );\r\n  }\r\n  renderQuestions() {\r\n    return (\r\n      <>\r\n        {super.renderQuestions()}\r\n        <Row className={\"justify-content-md-center\"}>\r\n          <div id=\"controls\">\r\n            <Button onClick={async () => await this.addQuestion()}>\r\n              Add new question\r\n            </Button>\r\n          </div>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n  renderQuestion(question, index) {\r\n    return (\r\n      <QuestionDesigner\r\n        key={index}\r\n        index={index}\r\n        {...question}\r\n        onChanged={async (qstate) => await this.onQuestionChange(qstate)}\r\n        onDelete={async () => await this.deleteQuestion(index)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionnaireDesigner;\r\n","// Shuffle an array\r\nfunction shuffle(a) {\r\n  for (var i = a.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = a[i];\r\n    a[i] = a[j];\r\n    a[j] = temp;\r\n  }\r\n  return a;\r\n}\r\n\r\nexport default shuffle;\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport QuestionRenderer from \"../question-renderer/question-renderer\";\r\nimport Shuffler from \"../../helpers/shuffler\";\r\nimport { getHTMLInputTypeForQuestionType } from \"../../constants/option-types\";\r\n// import { ReactComponent as Tick } from \"../../../assets/tick.svg\";\r\n// import { ReactComponent as Cross } from \"../../../assets/cross.svg\";\r\nimport \"./question.css\";\r\n\r\nclass Question extends QuestionRenderer {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: this.props.options ? Shuffler(this.props.options) : [],\r\n      onMarked: this.props.onMarked ? this.props.onMarked : async () => {},\r\n    };\r\n  }\r\n  checkSelectValid() {\r\n    try {\r\n      const selectedIndex = document.querySelector(\r\n        `#${this.getSelectId()}`\r\n      ).value;\r\n      const selectedOption = this.getOption(selectedIndex);\r\n      return selectedOption.correct\r\n        ? { isValid: true, disabled: \"disabled\" }\r\n        : { isInvalid: true, disabled: \"disabled\" };\r\n    } catch (_) {\r\n      // No option selected\r\n    }\r\n    return { isInvalid: true, disabled: \"disabled\" };\r\n  }\r\n  checkInputValid(index) {\r\n    const isChecked = document.querySelector(\r\n      `#question_${this.props.index}_option_${index}_input`\r\n    ).checked;\r\n    const isCorrect = this.getOption(index).correct;\r\n\r\n    return isChecked && isCorrect\r\n      ? { isValid: true, disabled: true }\r\n      : isChecked && !isCorrect\r\n      ? { isInvalid: true, disabled: true }\r\n      : { disabled: true };\r\n  }\r\n  calculateMarks(type) {\r\n    console.log(\"calculating marks\");\r\n    let correct = true;\r\n    if (type === \"select\") {\r\n      try {\r\n        const selectedIndex = document.querySelector(\r\n          `#${this.getSelectId()}`\r\n        ).value;\r\n        this.state.onMarked(\r\n          this.props.index,\r\n          this.getOption(selectedIndex)\r\n            ? this.getOption(selectedIndex).correct\r\n            : false\r\n        );\r\n      } catch (_) {\r\n        // No option selected.\r\n      }\r\n      return;\r\n    }\r\n    this.props.options.forEach((option, index) => {\r\n      const elem = document.querySelector(\r\n        `#question_${this.props.index}_option_${index}_input`\r\n      );\r\n      if (!elem) {\r\n        correct = false;\r\n        return;\r\n      }\r\n      const checked = elem.checked;\r\n      if ((checked && !option.correct) || (!checked && option.correct)) {\r\n        correct = false;\r\n      }\r\n    });\r\n    this.state.onMarked(this.props.index, correct);\r\n  }\r\n  getOption(index) {\r\n    return this.state.options[index];\r\n  }\r\n  // Render title\r\n  renderHeader() {\r\n    return <h5>{this.props.title ? this.props.title : \"unnamed question\"}</h5>;\r\n  }\r\n  // Render details\r\n  renderDetails() {\r\n    return this.props.details ? this.props.details : \"no details specified\";\r\n  }\r\n  // Render the container, that contains the rendered options.\r\n  // If overrided you'll have to call super.renderOptions or render options yourself.\r\n  renderOptionsContainer() {\r\n    return <Form className={\"question-options\"}>{this.renderOptions()}</Form>;\r\n  }\r\n  // Render a question.\r\n  renderOptions() {\r\n    const inputType = getHTMLInputTypeForQuestionType(this.props.type);\r\n\r\n    if (this.state.options.length < 1) {\r\n      return <h5>no options</h5>;\r\n    }\r\n\r\n    if (inputType === \"select\") {\r\n      return (\r\n        <Form.Group\r\n          as={Row}\r\n          xs=\"auto\"\r\n          className={\"question-option\"}\r\n          data-q-index={this.props.index}\r\n        >\r\n          {this.renderSelect(\"choose an option: \")}\r\n        </Form.Group>\r\n      );\r\n    }\r\n\r\n    return (this.state.options || []).map((option, o) => {\r\n      return this.renderInputOption(inputType, o);\r\n    });\r\n  }\r\n  renderDefaultSelectOption() {\r\n    return <option value=\"none\">select an option...</option>;\r\n  }\r\n  // Render an option to the current select element.\r\n  renderSelectOption(index) {\r\n    return (\r\n      <option value={index} key={`select_option_${index}`}>\r\n        {this.getOption(index).text}\r\n      </option>\r\n    );\r\n  }\r\n  getSelectId() {\r\n    return `option_select_${this.props.index}`;\r\n  }\r\n  getSelectClassName() {\r\n    return \"option-select\";\r\n  }\r\n\r\n  // Render a select element for the current question.\r\n  renderSelect() {\r\n    return (\r\n      <Form.Select\r\n        aria-label={\"option\"}\r\n        id={this.getSelectId()}\r\n        className={this.getSelectClassName()}\r\n        {...(this.props.show ? this.checkSelectValid() : \"\")}\r\n        onChange={() => this.calculateMarks(\"select\")}\r\n      >\r\n        {this.renderDefaultSelectOption()}\r\n        {this.state.options.map((o, index) => {\r\n          return this.renderSelectOption(index);\r\n        })}\r\n      </Form.Select>\r\n    );\r\n  }\r\n  // Render a input element.\r\n  renderInput(type, name, value, label, index) {\r\n    return (\r\n      <Col sm=\"10\">\r\n        <Form.Check\r\n          id={`question_${this.props.index}_option_${index}_input`}\r\n          label={label}\r\n          type={type}\r\n          name={name}\r\n          value={value}\r\n          data-o-index={index}\r\n          className={`option`}\r\n          {...(this.props.show ? this.checkInputValid(index) : \"\")}\r\n          onChange={() => this.calculateMarks()}\r\n        />\r\n      </Col>\r\n    );\r\n  }\r\n  // Render an option type input element.\r\n  renderInputOption(type, index) {\r\n    if (!this.getOption(index)) {\r\n      return;\r\n    }\r\n    return (\r\n      <Form.Group\r\n        className=\"my-1\"\r\n        as={Row}\r\n        data-q-index={this.props.index}\r\n        id={`option_inputs_${index}`}\r\n        key={`option_inputs_${index}`}\r\n      >\r\n        {this.renderInput(\r\n          type,\r\n          type === \"radio\" ? this.props.index : `option_${index}`,\r\n          this.getOption(index).correct,\r\n          this.getOption(index).text,\r\n          index\r\n        )}\r\n      </Form.Group>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col\r\n        style={{ \"--index\": this.props.index }}\r\n        key={`question_${this.props.index}`}\r\n      >\r\n        <Card className={\"question-card mb-3\"}>\r\n          <Card.Header>{this.renderHeader()}</Card.Header>\r\n          <Card.Text className={\"question-details p-3 mb-0\"}>\r\n            {this.renderDetails()}\r\n          </Card.Text>\r\n          <Card.Footer>{this.renderOptionsContainer()}</Card.Footer>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport QuestionnaireRenderer from \"../questionnaire-renderer/questionnaire-renderer\";\r\nimport Question from \"../question/question\";\r\nimport \"./questionnaire.css\";\r\n\r\nclass QuestionnaireInteractive extends QuestionnaireRenderer {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false, // list of answered questions\r\n      showResultModal: false, // show result modal\r\n    };\r\n    if (props.questionnaire.questions) {\r\n      this.marked = new Array(props.questionnaire.questions.length).fill(0);\r\n    }\r\n    this.onComplete = this.onComplete.bind(this);\r\n    this.onQuestionMarked = this.onQuestionMarked.bind(this);\r\n  }\r\n  async onComplete() {\r\n    await this.setState({ show: true, showResultModal: true });\r\n  }\r\n  onQuestionMarked(index, correct) {\r\n    this.marked[index] = correct\r\n      ? parseInt(this.props.questionnaire.questions[index].marks)\r\n      : 0;\r\n    console.log(this.marked);\r\n  }\r\n  renderTitle() {\r\n    return <h1 className=\"m-5\">{this.props.questionnaire.title}</h1>;\r\n  }\r\n  renderQuestions() {\r\n    return (this.props.questionnaire.questions || []).map(\r\n      (question, questionIndex) => {\r\n        return (\r\n          <Col\r\n            sm=\"12\"\r\n            key={`question_column_${questionIndex}`}\r\n            className={\"question\"}\r\n            id={`question_${questionIndex}`}\r\n          >\r\n            {this.renderQuestion(question, questionIndex)}\r\n          </Col>\r\n        );\r\n      }\r\n    );\r\n  }\r\n  renderQuestion(question, index) {\r\n    return (\r\n      <Question\r\n        key={`question_${index}`}\r\n        index={index}\r\n        {...question}\r\n        show={this.state.show}\r\n        onMarked={this.onQuestionMarked}\r\n      />\r\n    );\r\n  }\r\n  renderModal() {\r\n    return (\r\n      <Modal\r\n        show={this.state.showResultModal}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            {this.getTitle()} Complete\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Your results</h4>\r\n          <p>\r\n            You scored{\" \"}\r\n            {this.marked.map((a) => (a ? a : 0)).reduce((a, c) => a + c)} out of{\" \"}\r\n            {this.props.questionnaire.questions\r\n              .map((q) => parseInt(q.marks))\r\n              .reduce((a, c) => a + c)}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={() => this.setState({ showResultModal: false })}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Container fluid className={\"questionnaire\"}>\r\n        <Row className={\"header\"}>\r\n          <Col className={\"text-center\"}>{this.renderTitle()}</Col>\r\n        </Row>\r\n        <Row>{this.renderQuestions()}</Row>\r\n        <Row className=\"mt-1 mb-3\">\r\n          <Col md={{ offset: 10, span: 1 }}>\r\n            <Button onClick={async () => await this.onComplete()}>\r\n              {this.state.show ? \"Results\" : \"Complete\"}\r\n            </Button>\r\n            {this.renderModal(this.state.showResultModal)}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionnaireInteractive;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport LocalQuestionnaireSelector from \"./components/local-store-selector/local-store-selector\";\nimport QuestionnaireDesigner from \"./components/questionnaire-designer/questionnaire-designer\";\nimport Questionnaire from \"./components/questionnaire/questionnaire\";\n// import Questionnaire from \"./components/questionnaire/Questionnaire\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\n/*\nThe dreaded design aspect is here.\nIts time to actually put some thought into design principles. \n\nI don't need to be an artist, I just need some guidelines.\n\n1. [ ] - Keep your design balanced.\n2. [ ] - Compartmentalize your design by using grids.\n3. [ ] - Pick two or three base colors at most for your design.\n4. [ ] - Try to make the graphics go well together.\n5. [ ] - Improve your website’s typography.\n6. [ ] - Make elements stand out by adding white space around them.\n7. [ ] - Have all elements connected.\n\n*/\n\nimport cuid from \"cuid\";\nimport {\n  getQuestionnaireIds,\n  getQuestionnaire,\n  saveQuestionnaire,\n  deleteQuestionnaire,\n} from \"./store/local-store\";\n\nconst ExampleQuestionnaire = {\n  title: \"Example Questionnaire\",\n  questions: [\n    {\n      title: \"1.\",\n      details: \"What is the capital of England?\",\n      options: [\n        { text: \"London\", correct: true },\n        { text: \"Birmingham\", correct: false },\n        { text: \"Manchester\", correct: false },\n        { text: \"Yorkshire\", correct: false },\n      ],\n      type: \"single-choice\",\n      marks: \"8\",\n    },\n    {\n      title: \"2.\",\n      details: \"What came first? \",\n      options: [\n        { text: \"Chicken\", correct: false },\n        { text: \"Egg\", correct: false },\n        { text: \"Proto-Chicken\", correct: true },\n      ],\n      type: \"single-choice\",\n      marks: \"10\",\n    },\n    {\n      title: \"3.\",\n      details: \"Is climate change an issue?\",\n      options: [\n        { text: \"yes\", correct: true },\n        { text: \"no\", correct: false },\n      ],\n      type: \"single-choice-select\",\n      marks: \"15\",\n    },\n    {\n      title: \"4.\",\n      details: \"Dark is the absents of what?\",\n      options: [\n        { text: \"Light\", correct: true },\n        { text: \"The sun\", correct: false },\n        { text: \"Day\", correct: false },\n        { text: \"Love\", correct: false },\n      ],\n      type: \"multiple-choice-check\",\n      marks: 5,\n    },\n    {\n      title: \"5.\",\n      details: \"Yesterday is the past. Today is the present. Tomorrow is what?\",\n      options: [\n        { text: \"The future\", correct: true },\n        { text: \"The end\", correct: false },\n        { text: \"Tuesday\", correct: false },\n      ],\n      type: \"multiple-choice-check\",\n      marks: 5,\n    },\n  ],\n};\n\nconst PageStates = {\n  SELECT: \"SELECT\",\n  EDIT: \"EDIT\",\n  COMPLETE: \"COMPLETE\",\n  OVERVIEW: \"OVERVIEW\",\n};\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: undefined,\n      pageState: PageStates.EDIT,\n      questionnaire: {},\n    };\n    this.onQuestionnaireChange = this.onQuestionnaireChange.bind(this);\n    this.onSelectedChange = this.onSelectedChange.bind(this);\n    this.new = this.new.bind(this);\n    this.download = this.download.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.delete = this.delete.bind(this);\n\n    if (getQuestionnaireIds().length < 1) {\n      this.addExample();\n    }\n  }\n  async addExample() {\n    const id = cuid();\n    saveQuestionnaire(cuid(), ExampleQuestionnaire);\n    await this.setState({\n      id: id,\n      questionnaire: ExampleQuestionnaire,\n    });\n  }\n  async onQuestionnaireChange(mutation) {\n    console.log(\n      `changed questionnaire: ${JSON.stringify(mutation.questionnaire)}`\n    );\n    saveQuestionnaire(this.state.id, this.state.questionnaire);\n    await this.setState({\n      id: this.state.id,\n      questionnaire: mutation.questionnaire,\n    });\n  }\n  async onSelectedChange(selectedValue) {\n    console.log(`selection changed: ${selectedValue}`);\n    const itemSeleted = selectedValue !== \"none\";\n    const id = itemSeleted ? selectedValue : cuid();\n    await this.setState({\n      id: id,\n      questionnaire: itemSeleted\n        ? getQuestionnaire(id)\n        : {\n            title: \"\",\n            questions: [],\n          },\n    });\n  }\n  async new() {\n    const id = cuid();\n    const questionnaire = {};\n    saveQuestionnaire(id, questionnaire);\n\n    await this.setState(\n      {\n        id: id,\n        questionnaire: questionnaire,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  }\n  download() {\n    const loaded = getQuestionnaire(this.state.id);\n    if (!loaded.title) {\n      alert(`unable to load questionnaire with id: ${this.state.id}`);\n      return;\n    }\n\n    let link = document.querySelector(\"#download\");\n    if (!link) {\n      return;\n    }\n    link.setAttribute(\n      \"href\",\n      `data:text/plain;charset=utf-8,${encodeURIComponent(\n        JSON.stringify(loaded)\n      )}`\n    );\n    link.setAttribute(\"download\", `${loaded.title.replaceAll(\" \", \"-\")}.json`);\n  }\n  async toggleComplete() {\n    if (this.state.pageState !== PageStates.COMPLETE) {\n      return await this.setState({ pageState: PageStates.COMPLETE });\n    }\n    await this.setState({ pageState: PageStates.EDIT });\n  }\n  async delete() {\n    if (this.state.id === \"none\") {\n      return;\n    }\n    deleteQuestionnaire(this.state.id);\n\n    let cache = getQuestionnaireIds();\n    if (cache.length === 0) {\n      return await this.addExample();\n    }\n    await this.setState({\n      id: cache[0],\n      questionnaire: getQuestionnaire(cache[0]),\n    });\n  }\n  renderPageState() {\n    console.log(\"render page state\");\n    let jsx;\n    switch (this.state.pageState) {\n      case PageStates.COMPLETE:\n        jsx = <Questionnaire questionnaire={this.state.questionnaire} />;\n        break;\n      case PageStates.EDIT:\n        jsx = (\n          <>\n            <Row className=\"justify-content-end\">\n              <LocalQuestionnaireSelector\n                id={this.state.id}\n                onChange={async (v) => await this.onSelectedChange(v)}\n                selected={this.state.questionnaire.title}\n              />\n            </Row>\n            <QuestionnaireDesigner\n              questionnaire={this.state.questionnaire}\n              onChange={async (v) => this.onQuestionnaireChange(v)}\n            />\n          </>\n        );\n        break;\n      default:\n        jsx = <h2>Unhandled state: {this.state.pageState}</h2>;\n    }\n    return jsx;\n  }\n  render() {\n    console.log(\"render main\");\n    return (\n      <>\n        <Navbar expand=\"md\" bg=\"dark\" variant=\"dark\">\n          <Container>\n            <Navbar.Brand>Questionnaires ReactJS</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"collapse-nav\" />\n            <Navbar.Collapse id=\"collapse-nav\">\n              <Nav className=\"me-auto\">\n                <Nav.Link\n                  onClick={async () => await this.new()}\n                  disabled={this.state.pageState !== PageStates.EDIT}\n                >\n                  New\n                </Nav.Link>\n                <Nav.Link\n                  onClick={this.toggleComplete}\n                  className={\n                    this.state.pageState === PageStates.COMPLETE ? \"active\" : \"\"\n                  }\n                  disabled={\n                    !this.state.questionnaire.title ||\n                    !this.state.questionnaire.questions\n                  }\n                >\n                  {this.state.pageState === PageStates.COMPLETE\n                    ? \"Edit\"\n                    : \"Complete\"}\n                </Nav.Link>\n                <Nav.Link\n                  href=\"download\"\n                  id={\"download\"}\n                  className={\"undecorated\"}\n                  onClick={(e) => this.download(e)}\n                  disabled={this.state.pageState !== PageStates.EDIT}\n                >\n                  Download\n                </Nav.Link>\n                <Nav.Link\n                  onClick={this.delete}\n                  disabled={this.state.pageState !== PageStates.EDIT}\n                >\n                  Delete\n                </Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n        {this.renderPageState()}\n      </>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}